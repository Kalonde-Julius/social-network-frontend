{"remainingRequest":"/Users/nmadhab/hobby/social-network-frontend/node_modules/babel-loader/lib/index.js!/Users/nmadhab/hobby/social-network-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nmadhab/hobby/social-network-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nmadhab/hobby/social-network-frontend/src/views/ListUsers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nmadhab/hobby/social-network-frontend/src/views/ListUsers.vue","mtime":1616736749825},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGZpcmViYXNlIGZyb20gJ2ZpcmViYXNlJzsKaW1wb3J0IHsgQVBJX0JBU0VfVVJMIH0gZnJvbSAnL3NyYy9jb25maWcuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxpc3R1c2VycyIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJzOiBbXSwKICAgICAgZW1haWw6ICcnLAogICAgICB1c2VybmFtZTogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldHVzZXJzKCk7IC8vY29uc29sZS5sb2coZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLmVtYWlsKQoKICAgIHRoaXMuZW1haWwgPSBmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIuZW1haWw7CiAgICB0aGlzLnVzZXJuYW1lID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJuYW1lJyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXR1c2VyczogZnVuY3Rpb24gZ2V0dXNlcnMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgdXJsID0gIiIuY29uY2F0KEFQSV9CQVNFX1VSTCwgInB1YmxpYy91c2VycyIpOwogICAgICBheGlvcy5nZXQodXJsKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcCk7CgogICAgICAgIGlmIChyZXNwLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICBfdGhpcy51c2VycyA9IHJlc3AuZGF0YTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coImJhZCByZXF1ZXN0IGJ5IGNsaWVudCIpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfSwKICAgIGFkZGZyaWVuZDogZnVuY3Rpb24gYWRkZnJpZW5kKGlkKSB7CiAgICAgIGF4aW9zLmdldCgiIi5jb25jYXQoQVBJX0JBU0VfVVJMLCAicHJpdmF0ZS9hZGRGcmllbmQvP2ZyaWVuZElkPSIpLmNvbmNhdChpZCksIHsKICAgICAgICAnaGVhZGVycyc6IHsKICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2lkVG9rZW4nKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3AuZGF0YSk7CgogICAgICAgIGlmIChyZXNwLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICBhbGVydCgiZnJpZW5kIGFkZGVkISAiKTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTsKICAgICAgfSk7CiAgICB9LAogICAgZ29Ub0xvZ2luOiBmdW5jdGlvbiBnb1RvTG9naW4oKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbG9naW4nKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ListUsers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,SAAA,YAAA,QAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,QAAA,GADA,CAEA;;AACA,SAAA,KAAA,GAAA,QAAA,CAAA,IAAA,GAAA,WAAA,CAAA,KAAA;AACA,SAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,GAAA,aAAA,YAAA,iBAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AACA,YAAA,IAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,uBAAA;AACA;AACA,OAPA,EAOA,KAPA,CAOA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OATA;AAUA,KAbA;AAcA,IAAA,SAdA,qBAcA,EAdA,EAcA;AACA,MAAA,KAAA,CAAA,GAAA,WAAA,YAAA,yCAAA,EAAA,GAAA;AAAA,mBAAA;AACA,2BAAA,YAAA,YAAA,CAAA,OAAA,CAAA,SAAA;AADA;AAAA,OAAA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,YAAA,IAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,gBAAA,CAAA;AACA;AACA,OAPA,EAOA,KAPA,CAOA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,OAPA;AAQA,KAvBA;AAwBA,IAAA,SAxBA,uBAwBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AA1BA;AAfA,CAAA","sourcesContent":["<template>\n  <b-container>\n    <b-row>\n      <b-col class=\"pt-5\">\n        <b-list-group class=\"list-group\">\n          <b-list-group-item class=\"d-flex justify-content-around\" v-for=\"item in users\" v-bind:key=\"item.id\">\n                <div class=\"col-4\" v-if=\"item.name === null\">\n                  {{item.email}}\n                </div>\n                <div class=\"col-4\" v-else>\n                  {{item.name}}\n                </div>\n\n              <div class=\"col-4 text-center\">\n                <img class=\"img\" v-bind:src=\"item.picture\" alt=\"avatar\">\n              </div>\n              <div v-if=\"email !== item.email\" class=\"col-4 text-right\">\n                <button v-if=\"username\" class=\"btn btn-primary pull-right\" @click=\"addfriend(item.id)\">Add Friend</button>\n                <button v-else class=\"btn btn-primary pull-right\" @click=\"goToLogin()\">Add Friend</button>\n              </div>\n\n              <div v-else class=\"col-4 text-right\">\n\n              </div>\n          </b-list-group-item>\n        </b-list-group>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport firebase from 'firebase';\nimport {API_BASE_URL} from '/src/config.js';\n\nexport default {\n  name: \"listusers\",\n  data() {\n    return {\n      users: [],\n      email: '',\n      username: null\n    }\n  },\n   mounted() {\n    this.getusers();\n    //console.log(firebase.auth().currentUser.email)\n    this.email = firebase.auth().currentUser.email;\n    this.username = localStorage.getItem('username');\n  },\n  methods: {\n    getusers() {\n      const url = `${API_BASE_URL}public/users`;\n      axios.get(url).then(resp => {\n        console.log(resp);\n        if(resp.status === 200){\n          this.users = resp.data;\n        }else {\n          console.log(\"bad request by client\")\n        }\n      }).catch(err => {\n        console.log(err)\n      })\n    },\n    addfriend(id){\n      axios.get(`${API_BASE_URL}private/addFriend/?friendId=${id}`,{'headers' :{\n          'Authorization': 'Bearer '+localStorage.getItem('idToken'),\n        }}).then(resp => {\n          console.log(resp.data);\n          if(resp.status === 200){\n            alert(\"friend added! \");\n          }\n      }).catch(err => console.log(err))\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    }\n  },\n\n}\n</script>\n\n<style scoped>\n\n.img{\n  max-width: 70px;\n  max-height: 70px;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}