{"remainingRequest":"/Users/nmadhab/hobby/social-network-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nmadhab/hobby/social-network-frontend/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css&","dependencies":[{"path":"/Users/nmadhab/hobby/social-network-frontend/src/views/Login.vue","mtime":1616736749826},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nmadhab/hobby/social-network-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgogIC8qICJzY29wZWQiIGF0dHJpYnV0ZSBsaW1pdCB0aGUgQ1NTIHRvIHRoaXMgY29tcG9uZW50IG9ubHkgKi8KCi5zb2NpYWwtYnV0dG9uIHsKICAgIHdpZHRoOiA3NXB4OwogICAgYmFja2dyb3VuZDogd2hpdGU7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgYm9yZGVyLXJhZGl1czogMTAwJTsKICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCAwIHJnYmEoMCwwLDAsMC4yKTsKICAgIG91dGxpbmU6IDA7CiAgICBib3JkZXI6IDA7Cn0KLnNvY2lhbC1idXR0b246YWN0aXZlIHsKICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCAwIHJnYmEoMCwwLDAsMC4xKTsKfQouc29jaWFsLWJ1dHRvbiBpbWcgewogICAgd2lkdGg6IDEwMCU7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container>\n    <b-row>\n      <b-col class=\"pt-5\">\n        <h3 class=\"pb-3 text-center\">Sign In</h3>\n\n        <b-form  @submit.stop.prevent>\n          <b-form-group label=\"Email address:\">\n            <b-form-input v-model=\"email\" type=\"email\" required />\n          </b-form-group>\n\n          <b-form-group label=\"Password:\">\n            <b-form-input type=\"password\" v-model=\"password\" required/>\n          </b-form-group>\n\n          <b-form-group class=\"text-center\">\n            <b-button variant=\"success\" @click=\"login\">Login</b-button>\n          </b-form-group>\n          <b-form-group class=\"text-center\">\n            <p>Don't have an account ? You can <router-link to=\"/signup\">create one by Github </router-link></p>\n            <b-button class=\"social-button\" @click=\"socialGithubLogin\"><img src=\"/assets/github_logo.png\"></b-button>\n          </b-form-group>\n        </b-form>\n\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\n    import firebase from 'firebase';\n    import {saveUser} from \"@/helpers\";\n\n    import {API_BASE_URL} from \"../config\";\n    export default {\n        name: 'login',\n        data() {\n            return {\n                email: '',\n                password: '',\n                username: ''\n            }\n        },\n        methods: {\n          //Logged in using email id and password\n          login: function () {\n            firebase.auth().signInWithEmailAndPassword(this.email, this.password).then(\n                (user) => {\n                  this.username = user.user.email;\n                  localStorage.setItem(\"username\", this.username);\n                  firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n                    localStorage.setItem(\"idToken\", idToken);\n                    const token = \"Bearer \" + idToken\n                    const url = `${API_BASE_URL}private/saveUser`;\n                    saveUser(url, token);\n                  })\n                  this.$router.replace('/');\n                },\n                (err) => {\n                  alert('Oops. ' + err.message)\n                }\n            );\n          },\n\n          socialGithubLogin() {\n            //Logged in using GitHub\n            const provider = new firebase.auth.GithubAuthProvider();\n\n            firebase.auth().signInWithPopup(provider).then((result) => {\n              console.log(\"result\", result);\n              this.username = firebase.auth().currentUser.displayName;\n              localStorage.setItem(\"username\",this.username);\n              firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n                localStorage.setItem(\"idToken\", idToken);\n                const token = \"Bearer \" + idToken\n                const url = `${API_BASE_URL}private/saveUser`;\n                saveUser(url, token);\n              })\n              this.$router.replace('/');\n            }).catch((err) => {\n              alert('Oops. ' + err.message)\n            })\n          }\n        }\n\n    }\n\n</script>\n\n<style scoped>  /* \"scoped\" attribute limit the CSS to this component only */\n\n.social-button {\n    width: 75px;\n    background: white;\n    padding: 10px;\n    border-radius: 100%;\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2);\n    outline: 0;\n    border: 0;\n}\n.social-button:active {\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,0.1);\n}\n.social-button img {\n    width: 100%;\n}\n</style>\n"]}]}